[RUN]
# Name
name = MY_FOREST
# Path to the results directory
output_dir = my_results
# Path to the data file
data_path = data/d2_KRFP_100nM.parquet
# Path to the trained RNN model weights
model_path = models/SMILES_KRFP/model.pt
# If true, GPU will be used for the encoding
use_cuda = True
# Search a grid of hyperparameters to find the best model. If false, the model will be trained with the hyperparameters
# specified below (recommended, but may take a long time on weak machines)
optimize_hyperparameters = True

[RF]

# Number of trees in the forest. Usually an integer between 10 and 1000
n_estimators = 100
# Maximum depth of the tree. Usually an integer between 3 and 10 or None
max_depth = None
# The number of features to consider when looking for the best split. Can be sqrt, log2 or None
max_features = sqrt
# Grow trees with max_leaf_nodes in best-first fashion. Usually an integer or None
max_leaf_nodes = None