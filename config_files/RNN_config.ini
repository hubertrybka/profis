[RUN]
# Training data path (data/RNN_dataset_KRFP.parquet for KRFP
#                     or data/RNN_dataset_ECFP.parquet for ECFP4)
data_path = data/RNN_dataset_KRFP.parquet
# Name of the model
run_name = default_KRFP
# Batch size
batch_size = 256
# Epochs
epochs = 150
# First epoch No.
start_epoch = 1
# Learning rate
learn_rate = 0.00008
# If true, backpropagate the KLD loss
kld_backward = true
# Weight of the KLD loss (beta)
kld_weight = 0.001
# If true, use KLD annealing
kld_annealing = true
# Anneal until epoch
annealing_max_epoch = 30
# Annealing shape (linear, cosine or sigmoid)
annealing_shape = linear
# Fraction of the data to be used for training
train_size = 0.9
# Random seed for splitting the data
random_seed = 42
# Number of workers for data loading
num_workers = 3
# If true, use GPU if available
use_cuda = true
# Output encoding format (smiles, selfies or deepsmiles)
out_encoding = smiles
# Loss function (CE or truncated_CE)
loss = CE

[MODEL]
# Length of the fingerprint (4860 for KRFP, 2048 for ECFP4)
fp_len = 2048
# Size of the latent space
encoding_size = 32
# Size of the GRU hidden layer
hidden_size = 1024
# Number of GRU layers
num_layers = 2
# Dropout rate
dropout = 0.1
# Teacher forcing ratio
teacher_ratio = 0.2
# Size of the first fc layer
fc1_size = 2048
# Size of the second fc layer
fc2_size = 1024
fc2_enabled = true
# Size of the third fc layer
fc3_size = 512
fc3_enabled = false
# Encoder activation function (relu, elu, gelu or leaky_relu)
encoder_activation = relu

